<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Thom.space</title>
    <link>http://thom.space/index.xml</link>
    <description>Recent content in Home on Thom.space</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Tue, 31 Jan 2017 21:27:42 +0100</lastBuildDate>
    <atom:link href="http://thom.space/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>RoofMapper</title>
      <link>http://thom.space/projects/roofmapper/</link>
      <pubDate>Mon, 30 Jan 2017 20:32:22 +0100</pubDate>
      
      <guid>http://thom.space/projects/roofmapper/</guid>
      <description>&lt;p&gt;A tool that makes contributing to &lt;a href=&#34;https://www.openstreetmap.org/&#34;&gt;OpenStreetMap&lt;/a&gt; really accessible.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Running at &lt;a href=&#34;http://www.roofmapper.eu/&#34;&gt;www.roofmapper.eu&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;This is an experiment in offering a way for non-computer-savvy people to contribute to the project.
Here the user just has to select the building roof material, with the help of the aerial imagery, by clicking the corresponding button.
When finished, the user clicks “upload” to send changes, and that’s all.
Everything else, from the selection of the buildings to the changeset message, is taken care of automatically.&lt;/p&gt;

&lt;p&gt;The tool is designed to be used with tablets, though it is fully usable on a desktop computer. (It can be used using the keyboard only.)&lt;/p&gt;

&lt;p&gt;RoofMapper can also be used by seasoned mappers for quick contributions.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;img class=&#34;centered-image img-responsive&#34; src=&#34;http://thom.space/img/roofmapper-capture-2.jpg&#34; /&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;Source code:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tpetillon/roofmapper-client&#34;&gt;Client repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tpetillon/roofmapper-server&#34;&gt;Server repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tpetillon/roofmapper-buildingextractor&#34;&gt;Data extraction tool repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Licence: MIT&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Software Renderer</title>
      <link>http://thom.space/projects/softwarerenderer/</link>
      <pubDate>Mon, 30 Jan 2017 20:32:38 +0100</pubDate>
      
      <guid>http://thom.space/projects/softwarerenderer/</guid>
      <description>&lt;p&gt;A simple software renderer I made from scratch. (Except to get a drawable surface and input events, for which SDL is used. Everything else, including maths code, is hand-written.)&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Vertex arrays&lt;/li&gt;
&lt;li&gt;Z-buffer&lt;/li&gt;
&lt;li&gt;Correct triangle clipping&lt;/li&gt;
&lt;li&gt;Shader system with perspective-correct interpolation&lt;/li&gt;
&lt;li&gt;Texture sampling&lt;/li&gt;
&lt;li&gt;Pixels drawn in quads&lt;/li&gt;
&lt;li&gt;OBJ file loading&lt;/li&gt;
&lt;li&gt;FPS-style camera&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;img class=&#34;centered-image img-responsive&#34; src=&#34;http://thom.space/img/softwarerenderer-capture-1.jpg&#34; /&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;img class=&#34;centered-image img-responsive&#34; src=&#34;http://thom.space/img/softwarerenderer-capture-2.jpg&#34; /&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tpetillon/softwarerenderer&#34;&gt;Source code repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Licence: MIT&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Breton conjugator</title>
      <link>http://thom.space/projects/bretonconjugator/</link>
      <pubDate>Wed, 13 Sep 2017 21:04:15 +0100</pubDate>
      
      <guid>http://thom.space/projects/bretonconjugator/</guid>
      <description>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;title&gt;Breton conjugator&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
  &lt;script type=&#34;text/javascript&#34; src=&#34;http://thom.space/js/breton-conjugator.js&#34;&gt;&lt;/script&gt;&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title>Pasorikai</title>
      <link>http://thom.space/projects/pasorikai/</link>
      <pubDate>Tue, 31 Jan 2017 20:39:51 +0100</pubDate>
      
      <guid>http://thom.space/projects/pasorikai/</guid>
      <description>&lt;p&gt;A Japanese-to-English interactive dictionary for Windows.
Based on a port of the &lt;a href=&#34;http://www.polarcloud.com/rikaichan&#34;&gt;Rikaichan&lt;/a&gt; Firefox extension.
Uses &lt;a href=&#34;http://wwwjdic.com/&#34;&gt;Jim Breen’s WWWJDIC&lt;/a&gt; Japanese dictionary.&lt;/p&gt;

&lt;p&gt;Features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Automatically grabs text for the clipboard&lt;/li&gt;
&lt;li&gt;Can be controlled without application focus, using keyboard hotkeys&lt;/li&gt;
&lt;li&gt;Conjugated form to root form conversion&lt;/li&gt;
&lt;li&gt;Kanji to kana conversion&lt;/li&gt;
&lt;li&gt;Kanji details display&lt;/li&gt;
&lt;li&gt;Results sorted by usage frequency&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;img class=&#34;centered-image img-responsive&#34; src=&#34;http://thom.space/img/pasorikai-capture-1.png&#34; /&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tpetillon/pasorikai&#34;&gt;Source code repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Licence: GPLv2&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>http://thom.space/contact/</link>
      <pubDate>Tue, 31 Jan 2017 20:15:47 +0100</pubDate>
      
      <guid>http://thom.space/contact/</guid>
      <description>&lt;p&gt;Contact&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://thom.space/about/</link>
      <pubDate>Mon, 30 Jan 2017 20:44:58 +0100</pubDate>
      
      <guid>http://thom.space/about/</guid>
      <description>

&lt;h2 id=&#34;thomas-pétillon&#34;&gt;Thomas Pétillon&lt;/h2&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h4 id=&#34;software-developper&#34;&gt;Software developper&lt;/h4&gt;

&lt;p&gt;Graduated from &lt;a href=&#34;https://www.insa-rennes.fr/en.html&#34;&gt;INSA Rennes&lt;/a&gt; engineering school and &lt;a href=&#34;http://www.univ-lyon2.fr/www0-home-157320.kjsp&#34;&gt;Université Lyon 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h4 id=&#34;specialisations&#34;&gt;Specialisations:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;3D graphics&lt;/li&gt;
&lt;li&gt;video games&lt;/li&gt;
&lt;li&gt;geographic information systems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I like software development, video games, and geography, but not only, as I dabble with pretty much anything nerdy I encounter, including but not limited to linguistics, drawing, music theory and history.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h4 id=&#34;i-have-worked-on&#34;&gt;I have worked on:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Several commercially released video games at &lt;a href=&#34;http://www.ankama.com/en&#34;&gt;Ankama&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Including &lt;a href=&#34;http://store.steampowered.com/app/329790/&#34;&gt;Krosmaster Arena&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Realtime 3D city viewers at &lt;a href=&#34;https://www.siradel.com/&#34;&gt;Siradel&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Unity and WebGL based&lt;/li&gt;
&lt;li&gt;For multibillion-revenue companies&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://thom.space/projects/&#34;&gt;Personal projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h4 id=&#34;and-more-precisely&#34;&gt;And more precisely:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://unity3d.com/&#34;&gt;Unity&lt;/a&gt; based game development

&lt;ul&gt;
&lt;li&gt;Base application framework, sits on top of Unity and provides:&lt;/li&gt;
&lt;li&gt;Dependency injection capabilities&lt;/li&gt;
&lt;li&gt;Event-command pattern&lt;/li&gt;
&lt;li&gt;Scene compositing (declare a scene in a simple struct, at runtime the scene is created, abstracting main data vs scene vs asset bundle, automatically loading and unloading data, code and event definitions)&lt;/li&gt;
&lt;li&gt;Loading transitions&lt;/li&gt;
&lt;li&gt;In-game scripting&lt;/li&gt;
&lt;li&gt;Camera system (many modes, transitions between the modes)&lt;/li&gt;
&lt;li&gt;UI&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Realtime city viewer in Unity

&lt;ul&gt;
&lt;li&gt;Fully dynamic data loading&lt;/li&gt;
&lt;li&gt;Composable data visualisation&lt;/li&gt;
&lt;li&gt;Ex.: Scale building heights according to inhabitant count, colour them according to revenue, while displaying a crime heatmap on the ground and colouring roads according to traffic&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://silverspaceship.com/src/svt/&#34;&gt;Sparse virtual texturing&lt;/a&gt; (aka megatextures) system, including associated texture generation and update tools&lt;/li&gt;
&lt;li&gt;Multithreading system (task, continuation and executor based)&lt;/li&gt;
&lt;li&gt;Advanced coroutine manager&lt;/li&gt;
&lt;li&gt;Dynamic line-on-mesh drawing systems (polygon-based and decal-based)&lt;/li&gt;
&lt;li&gt;Custom terrain collision system&lt;/li&gt;
&lt;li&gt;Camera system&lt;/li&gt;
&lt;li&gt;Runs on PC, tablets and web browsers&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;WebGL development

&lt;ul&gt;
&lt;li&gt;Based on the &lt;a href=&#34;https://cesiumjs.org/&#34;&gt;Cesium&lt;/a&gt; 3D globe renderer&lt;/li&gt;
&lt;li&gt;Tiled 3D-building rendering system&lt;/li&gt;
&lt;li&gt;Dynamic texturing and palette-based colouring&lt;/li&gt;
&lt;li&gt;Efficient data format&lt;/li&gt;
&lt;li&gt;Converter and texture tools&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Java server development

&lt;ul&gt;
&lt;li&gt;Highly concurrent architecture (multiple thousands of simultaneously connected players)&lt;/li&gt;
&lt;li&gt;Binary client-server protocol&lt;/li&gt;
&lt;li&gt;SQL data storage and retrieval (with and without ORMs)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Web stuff

&lt;ul&gt;
&lt;li&gt;Node.JS server development&lt;/li&gt;
&lt;li&gt;Client-side JS&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Flash game development

&lt;ul&gt;
&lt;li&gt;Some things I used to be quite proud of, but hey, nobody uses Flash anymore!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>